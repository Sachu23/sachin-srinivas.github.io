{"ast":null,"code":"export const PROJECTS = [{\n  id: 0,\n  name: 'Chicago Bikers Real-Time Navigation System',\n  image: '/images/attendance.jpg',\n  description: 'Speaker Recognition using Hidden Markov Models (HMM). Feature extraction using MFCCs were done. Probablistic HMM was used to train and build the speech model ',\n  link: \"https://github.com/rajatkeshri/attendance-system-using-speaker-recogntion-\",\n  feature: true,\n  techstack: \"React Native, ReactJS, ExpressJS, NodeJS, MongoDB, REST API\",\n  renderfirst: false\n}, {\n  id: 1,\n  name: 'Real-Time Distributed Component Based Framework for Twitter Sentiment Analysis',\n  image: '/images/face.jpg',\n  description: 'A Facial recognition system to extract facial features using region of interests and authenticate users, built using openCV libary and Python',\n  link: 'https://github.com/rajatkeshri/Facial-recogntiion',\n  feature: false,\n  techstack: \"Python, Keras, OpenCV\",\n  renderfirst: true\n}, {\n  id: 2,\n  name: 'College Placements Website',\n  image: '/images/placements2.png',\n  description: 'A website to represent placement, salary, and company statistics. The database used here is MongoDB Atlas, integrated with Express, built using NodeJs',\n  link: 'https://github.com/rajatkeshri/placement-stats-2020',\n  feature: true,\n  techstack: \"NodeJs, Express, MongoDB\",\n  renderfirst: false\n}, {\n  id: 3,\n  name: 'Ronaldo Goal Prediction',\n  image: '/images/ronaldo.jpg',\n  description: 'Prediction of whether ronaldo scores a goal or not, based on the data given, like x and y position of where the shot is taken and and how much power is applied during the shot.',\n  link: 'https://github.com/rajatkeshri/ZS-HACK-predict-ronaldo-goal',\n  feature: false,\n  techstack: \"Jupyter-Notebook, Keras\",\n  renderfirst: true\n}, {\n  id: 4,\n  name: 'Facial Emotion Recongition',\n  image: '/images/emotion1.png',\n  description: 'A Python implementation of face emotion recognition sysstem. Project was built as part of Grapple Hackathon. Harcascade feature extraction was involved, which aided in building the emotion model.',\n  link: 'https://github.com/rajatkeshri/Grapple-hack-Face-Emotion-Recognition',\n  feature: true,\n  techstack: \"Python, OpenCV, Keras\",\n  renderfirst: false\n}, {\n  id: 5,\n  name: 'Speaker Diarization',\n  image: '/images/speech.png',\n  description: 'Speaker diarization system had to distinguish and find out the timestamps between two speaker changes in a continuous audio file with multiple speakers.',\n  link: 'https://github.com/rajatkeshri/Speaker-Diarization-',\n  feature: false,\n  techstack: \"Python, HMM, CNN, Keras\",\n  renderfirst: true\n}, {\n  id: 6,\n  name: 'Stock Market Prediction',\n  image: '/images/stock.jpg',\n  description: 'A simple stock market prediction using logistic regression',\n  link: 'https://github.com/rajatkeshri/Stock-market-prediction',\n  feature: false,\n  techstack: \"Jupyter-Notebook, Keras\",\n  renderfirst: false\n}, {\n  id: 7,\n  name: 'Decentralised Cloud Storage',\n  image: 'images/cloud.png',\n  description: 'A simple decentralized cloud storage works on peer to peer communication',\n  link: 'https://github.com/rajatkeshri/Decentralised-cloud',\n  feature: false,\n  techstack: \"Python, Socket, Threading\",\n  renderfirst: false\n}, {\n  id: 8,\n  name: 'Digital Identity System',\n  image: '/images/vr.jpg',\n  description: 'A prototype blockchain network is created and user digital identity is validated using facial recognition',\n  link: 'https://github.com/rajatkeshri/Digital-identity-using-blockchain-network',\n  feature: false,\n  techstack: \"Python, Flask, OpenCV, Keras, Socket, SHA256\",\n  renderfirst: false\n}, {\n  id: 9,\n  name: 'Pothole Detection',\n  image: 'images/pothole.jpg',\n  description: 'Pothole detection and mapping using drone footage and Computer vision',\n  link: 'https://github.com/rajatkeshri/Techathlon',\n  feature: false,\n  techstack: \"Python, Keras, OpenCV\",\n  renderfirst: false\n}, {\n  id: 10,\n  name: 'Flood Prediction',\n  image: 'images/flood.jpg',\n  description: 'Prediction of whether a flood may occur or not, depending rainfall data, using machine learning algorithms',\n  link: 'https://github.com/rajatkeshri/Flood-prediction',\n  feature: false,\n  techstack: \"Jupyter-Notebook, Keras\",\n  renderfirst: false\n}, {\n  id: 11,\n  name: 'Cyberbullying and Sexual Predator Predictor',\n  image: 'images/flood.jpg',\n  description: 'Built a software that would monitor chat (instagram or whatsapp) and predict if cyberbullying is happening',\n  link: 'https://github.com/rajatkeshri/hackthehourglass_sexual_predator',\n  feature: false,\n  techstack: \"Python, Jupyter-Notebook, Keras, NLP, NLTK\",\n  renderfirst: false\n}, {\n  id: 12,\n  name: 'Music Genre Prediction',\n  image: 'images/flood.jpg',\n  description: 'RNN-LSTM and Deep learning models are build which is used to predict the genre of the song which is given as input to the model.',\n  link: 'https://github.com/rajatkeshri/Music-Genre-Prediction-Using-RNN-LSTM',\n  feature: false,\n  techstack: \"Jupyter-Notebook, Keras, RNN, LSTM\",\n  renderfirst: false\n}];","map":{"version":3,"names":["PROJECTS","id","name","image","description","link","feature","techstack","renderfirst"],"sources":["/Users/sachins/Desktop/Projects/portfolio/src/shared/projectdata.js"],"sourcesContent":["export const PROJECTS =\n    [\n        {\n            id: 0,\n            name:'Chicago Bikers Real-Time Navigation System',\n            image: '/images/attendance.jpg',\n            description:'Speaker Recognition using Hidden Markov Models (HMM). Feature extraction using MFCCs were done. Probablistic HMM was used to train and build the speech model ',\n            link : \"https://github.com/rajatkeshri/attendance-system-using-speaker-recogntion-\",\n            feature:true,\n            techstack: \"React Native, ReactJS, ExpressJS, NodeJS, MongoDB, REST API\",\n            renderfirst: false\n        },\n        {\n            id: 1,\n            name:'Real-Time Distributed Component Based Framework for Twitter Sentiment Analysis',\n            image: '/images/face.jpg',\n            description:'A Facial recognition system to extract facial features using region of interests and authenticate users, built using openCV libary and Python',\n            link: 'https://github.com/rajatkeshri/Facial-recogntiion',\n            feature:false,\n            techstack: \"Python, Keras, OpenCV\",\n            renderfirst: true\n        },\n        {\n            id: 2,\n            name:'College Placements Website',\n            image: '/images/placements2.png',\n            description:'A website to represent placement, salary, and company statistics. The database used here is MongoDB Atlas, integrated with Express, built using NodeJs',\n            link: 'https://github.com/rajatkeshri/placement-stats-2020',\n            feature:true,\n            techstack: \"NodeJs, Express, MongoDB\",\n            renderfirst:false\n        },\n        {\n         id: 3,\n            name:'Ronaldo Goal Prediction',\n            image: '/images/ronaldo.jpg',\n            description:'Prediction of whether ronaldo scores a goal or not, based on the data given, like x and y position of where the shot is taken and and how much power is applied during the shot.',\n            link: 'https://github.com/rajatkeshri/ZS-HACK-predict-ronaldo-goal',\n            feature:false,\n            techstack: \"Jupyter-Notebook, Keras\",\n            renderfirst: true\n        },\n        {\n            id: 4,\n            name:'Facial Emotion Recongition',\n            image: '/images/emotion1.png',\n            description:'A Python implementation of face emotion recognition sysstem. Project was built as part of Grapple Hackathon. Harcascade feature extraction was involved, which aided in building the emotion model.',\n            link: 'https://github.com/rajatkeshri/Grapple-hack-Face-Emotion-Recognition',\n            feature:true,\n            techstack: \"Python, OpenCV, Keras\",\n            renderfirst:false\n        },\n        {\n            id: 5,\n            name:'Speaker Diarization',\n            image: '/images/speech.png',\n            description:'Speaker diarization system had to distinguish and find out the timestamps between two speaker changes in a continuous audio file with multiple speakers.',\n            link: 'https://github.com/rajatkeshri/Speaker-Diarization-',\n            feature:false,\n            techstack: \"Python, HMM, CNN, Keras\",\n            renderfirst: true\n        },\n        {\n            id: 6,\n            name:'Stock Market Prediction',\n            image: '/images/stock.jpg',\n            description:'A simple stock market prediction using logistic regression',\n            link: 'https://github.com/rajatkeshri/Stock-market-prediction',\n            feature:false,\n            techstack: \"Jupyter-Notebook, Keras\",\n            renderfirst: false\n        },\n        {\n            id: 7,\n            name:'Decentralised Cloud Storage',\n            image: 'images/cloud.png',\n            description:'A simple decentralized cloud storage works on peer to peer communication',\n            link: 'https://github.com/rajatkeshri/Decentralised-cloud',\n            feature:false,\n            techstack: \"Python, Socket, Threading\",\n            renderfirst: false\n        },\n        {\n            id: 8,\n            name:'Digital Identity System',\n            image: '/images/vr.jpg',\n            description:'A prototype blockchain network is created and user digital identity is validated using facial recognition',\n            link: 'https://github.com/rajatkeshri/Digital-identity-using-blockchain-network',\n            feature:false,\n            techstack: \"Python, Flask, OpenCV, Keras, Socket, SHA256\",\n            renderfirst: false\n        },\n        {\n            id: 9,\n            name:'Pothole Detection',\n            image: 'images/pothole.jpg',\n            description:'Pothole detection and mapping using drone footage and Computer vision',\n            link: 'https://github.com/rajatkeshri/Techathlon',\n            feature:false,\n            techstack: \"Python, Keras, OpenCV\",\n            renderfirst: false\n        },\n        {\n            id: 10,\n            name:'Flood Prediction',\n            image: 'images/flood.jpg',\n            description:'Prediction of whether a flood may occur or not, depending rainfall data, using machine learning algorithms',\n            link: 'https://github.com/rajatkeshri/Flood-prediction',\n            feature:false,\n            techstack: \"Jupyter-Notebook, Keras\",\n            renderfirst: false\n        },\n        {\n            id: 11,\n            name:'Cyberbullying and Sexual Predator Predictor',\n            image: 'images/flood.jpg',\n            description:'Built a software that would monitor chat (instagram or whatsapp) and predict if cyberbullying is happening',\n            link: 'https://github.com/rajatkeshri/hackthehourglass_sexual_predator',\n            feature:false,\n            techstack: \"Python, Jupyter-Notebook, Keras, NLP, NLTK\",\n            renderfirst: false\n        },\n        {\n            id: 12,\n            name:'Music Genre Prediction',\n            image: 'images/flood.jpg',\n            description:'RNN-LSTM and Deep learning models are build which is used to predict the genre of the song which is given as input to the model.',\n            link: 'https://github.com/rajatkeshri/Music-Genre-Prediction-Using-RNN-LSTM',\n            feature:false,\n            techstack: \"Jupyter-Notebook, Keras, RNN, LSTM\",\n            renderfirst: false\n        }\n        \n        \n        \n    ];"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}